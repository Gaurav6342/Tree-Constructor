Bracket Combinations
Have the function BracketCombinations(num) read num which will be an integer
greater than or equal to zero, and return the number of valid combinations that can be formed with num 
pairs of parentheses. For example, if the input is 3, then the possible combinations of 3 pairs of parenthesis, 
namely: ()()(), are ()()(), ()(()), (())(), ((())), and (()()). There are 5 total combinations when the input is 3, 
so your program should return 5.
Examples
Input: 3
Output: 5
Input: 2
Output: 2

python 3 code:

def BracketCombinations(num):
    if num == 0:
        return 1
    count = 0 
    for i in range(num): 
        count += BracketCombinations(i) * BracketCombinations(num - i - 1)
    return count  
  # code goes here
    return num

# keep this function call here 
print(BracketCombinations(input()))

Output:

== RUNNING SAMPLE TEST CASES ==

== INPUT ==
3

== OUTPUT ==
5

<< CORRECT >>

== INPUT ==
2

== OUTPUT ==
2

<< CORRECT >>

== 8 TEST CASES HIDDEN ==
