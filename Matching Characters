Matching Characters
Have the function MatchingCharacters(str) take the str parameter 
being passed and determine the largest number of unique characters that 
exists between a pair of matching letters anywhere in the string. For example: 
if str is "ahyjakh" then there are only two pairs of matching letters, the two a's and the two h's.
Between the pair of a's there are 3 unique characters: h, y, and j. Between the h's there are 4 unique characters: y, j, a, and k. 
So for this example your program should return 4.

Another example: if str is "ghececgkaem" then your program should return 5 because the most
unique characters exists within the farthest pair of e characters. The input string may not contain any character pairs,
and in that case your program should just return 0. The input will only consist of lowercase alphabetic characters.
Examples
Input: "mmmerme"
Output: 3
Input: "abccdefghi"
Output: 0

Python code:

def MatchingCharacters(strParam):
    max_unique_chars = 0
    for i in range(len(strParam)):
      for j in range(i+1, len(strParam)):
          if strParam[i] == strParam[j]:
           unique_chars = len(set(strParam[i+1:j]))
           if (unique_chars > max_unique_chars):
                max_unique_chars = unique_chars
    return max_unique_chars
  # code goes here
    return strParam

# keep this function call here 
print(MatchingCharacters(input()))

Output:

== RUNNING SAMPLE TEST CASES ==

== INPUT ==
"mmmerme"

== OUTPUT ==
3

<< CORRECT >>

== INPUT ==
"abccdefghi"

== OUTPUT ==
0

<< CORRECT >>

== 8 TEST CASES HIDDEN ==
